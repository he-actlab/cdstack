
component dct(input float x[N][N], output float y[N][N], state blocks[N][N])
{

    iterator i[0:N-1];
    iterator j[0:N-1];
    iterator k[0:N-1];

    temp[i][j] = sum[k](block[k][i]*x[k][j]);
    y[i][j] = sum[k](temp[i][k]*x[k][j]);

}

component dct_old(input float x[N][N], output float y[N][N])
{

    iterator i[0:N-1];
    iterator k[0:B-1];

    iterator j[0:N-1];
    iterator l[0:B-1];

    iterator p[1:B-1];
    iterator q[1:B-1];


    alpha_p[0] = 1.0/(M^0.5);
    alpha_p[p] = 1.0/((2.0/M)^0.5);

    alpha_q[0] = 1.0/(N^0.5);
    alpha_q[q] = 1.0/((2.0/N)^0.5);

    cosp_values[i]= pi()*(2*i + 1)/M;
    cosq_values[j]= pi()*(2*j + 1)/N;

    y[i][j] = alpha_p[i]*alpha_q[j] * sum[k][l](x[k][l] * cos(cosp_values[k]*i) * cos(cosq_values[l]*j);

    y[i][j] = sum[k]

}


