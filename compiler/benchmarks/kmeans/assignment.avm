
.cbegin assignment$1                     	; parent: kmeans_train$1
	connect $c0, $q0                        ; assignment$1:x -> main:kmeans_train$1:x
	connect $c1, $q1                        ; assignment$1:centroids ->  main:kmeans_train$1:centroids
	connect $c2, $q6                        ; assignment$1:cluster_assignment -> kmeans_train$1:cluster_assignment
  idx $i0, 0, 9                           ; i -> 0-9
  idx $i1, 0, 783                         ; j -> 0-783
.cend
.cbegin assignment
	read float $t0, $c0                     ; x
	read float $t1, $c1                     ; centroids
	idx $i2, $i0, $i1                       ; 'i', 'j' -> [i][j]
	sub float $t2, $i1($t0), $i2($t1)       ; x[j]-centroids[i][j]
	exp float $t3, $i1($t2), 2.0            ; (x[j]-centroids[i][j])^2.0
	sum float $t4, $i1($t3)                 ; sum[j]((x[j]-centroids[i][j])^2.0)
	exp float $t5, $t4, 0.5                 ; sum[j]((x[j]-centroids[i][j])^2.0)^(0.5)
	argmin int $t6, $i0($t5)                ; argmin[i](distances[i])
	write int $c2, $t6                      ; cluster_assignment
.cend

component assignment(input float x[m], state float centroids[centers][m], output int cluster_assignment)
{
    indexer i[0:centers-1], j[0:m-1];

    distances[i] = sum[j]((x[j] - centroids[i][j])^2.0)^(0.5);
    cluster_assignment = argmin[i](distances[i]);
}
