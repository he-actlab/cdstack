spring read_data(output float x[n], parameter string path, parameter string type='csv'){
    indexer i[0:n-1];
    lines = fread(path1, type);
    x[i] = float(lines[i]);
}
component assignment(input float x[m], state float centroids[centers][m], output int cluster_assignment){
    indexer i[0:centers-1], j[0:m-1];
    distances[i] = sum[j]((x[j] - centroids[i][j])^2.0)^(0.5);
    cluster_assignment = argmin[i](distances[i]);
}
component update_sum(input float x[m], input int cluster_assignment, state float centroids_sums[centers][m], state float cluster_sizes[centers]){
    indexer i[0:m-1];
    centroids_sum[cluster_assignment][i] = centroids_sum[cluster_assignment][i] + x[i];
    cluster_sizes[cluster_assignment] = cluster_sizes[cluster_assignment] + 1;
}
component kmeans_train(input float x[m], input float centroids[centers][m], output float centroid_sums[centers][m], output float cluster_sizes[centers]){
    // Initialize cluster sizes and centroid sums
    flow int cluster_sizes[10] = 0;
    flow float centroid_sums[10][784] = 0;
    // Create output flow for writing to
    flow int cluster_assignment;
  	assignment(x, centroids, cluster_assignment);
  	update_sum(x, cluster_assignment, centroid_sums, cluster_sizes)
}
component update_centroids(input float centroid_sums[centers][m], input float cluster_sizes[centers], output float new_centroids[centers][m]){
    indexer i[0:centers-1], j[0:m-1];
    new_centroids[i][j] = centroid_sums[i][j]/cluster_sizes[i];
}
reservoir store_data(input float centroids[n][m], input epochs, parameter string path, parameter string type='csv'){
    fwrite(centroids, path, type);
}
component main(){
    flow float train_data[784], centroids[10][784], new_centroids[10][784];
    // Naively initialize centroids
    centroids[i][j] = 0;
    // Read training data
    read_data(train_data, 'data/train.csv');
    kmeans_train(train_data, centroids, centroid_sums, cluster_sizes);
    update_centroids(centroid_sums, cluster_sizes, new_centroids);
    store_data(new_centroids, 'data/model.csv');
}
